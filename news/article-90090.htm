<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN" class="no-js">
<!-- BEGIN HEAD -->

<head>
        <link rel="canonical" href="https://vlessgithub.github.io/news/article-90090.htm" />
    <meta charset="utf-8" />
    <title>docker-compose 配置kafka_Docker Compose 引用环境变量</title>
        <meta name="description" content="在项目中，往往需要在 docker-compose.yml 文件中使用环境变量来控制不同的条件和使用场景。本文集中介绍 docker compose 引用环境变量的方式。说明：本文的演示环境为 ubu" />
        <link rel="icon" href="/assets/website/img/vlessgithub/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Vless Github机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vlessgithub.github.io/news/article-90090.htm" />
    <meta property="og:site_name" content="Vless Github机场订阅官网" />
    <meta property="og:title" content="docker-compose 配置kafka_Docker Compose 引用环境变量" />
    <meta property="og:image" content="https://vlessgithub.github.io/uploads/20240903/25334a7385405cae6b531508b92ea225.webp" />
        <meta property="og:release_date" content="2025-04-07T09:01:03" />
    <meta property="og:updated_time" content="2025-04-07T09:01:03" />
        <meta property="og:description" content="在项目中，往往需要在 docker-compose.yml 文件中使用环境变量来控制不同的条件和使用场景。本文集中介绍 docker compose 引用环境变量的方式。说明：本文的演示环境为 ubu" />
        
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="docker-compose 配置kafka_Docker Compose 引用环境变量">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- GLOBAL MANDATORY STYLES -->
    <link href="http://fonts.googleapis.com/css?family=Hind:300,400,500,600,700" rel="stylesheet" type="text/css">
    <link href="/assets/website/js/frontend/vlessgithub/simple-line-icons/css/simple-line-icons.css" rel="stylesheet" type="text/css" />
    <link href="/assets/website/js/frontend/vlessgithub/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- PAGE LEVEL PLUGIN STYLES -->
    <link href="/assets/website/css/vlessgithub/animate.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/vlessgithub/swiper/css/swiper.min.css" rel="stylesheet" type="text/css" />
    <!-- THEME STYLES -->
    <link href="/assets/website/css/vlessgithub/layout.min.css" rel="stylesheet" type="text/css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-X2HXTZV7HY"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-X2HXTZV7HY');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>
<!-- END HEAD -->
<!-- BODY -->

<body id="body" data-spy="scroll" data-target=".header" data-page="detail">
        <!--========== HEADER ==========-->
    <header class="header navbar-fixed-top">
        <!-- Navbar -->
        <nav class="navbar" role="navigation">
            <div class="container">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="menu-container js_nav-item">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".nav-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="toggle-icon"></span>
                    </button>
                    <!-- Logo -->
                    <div class="logo">
                        <a class="logo-wrap" href="/">
                                                <span>Vless Github</span>
                                                </a>
                    </div>
                    <!-- End Logo -->
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse nav-collapse">
                    <div class="menu-container">
                        <ul class="nav navbar-nav navbar-nav-right">
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/client.htm">客户端</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/news/">新闻资讯</a></li>
                                                    </ul>
                    </div>
                </div>
                <!-- End Navbar Collapse -->
            </div>
        </nav>
        <!-- Navbar -->
    </header>
    <!--========== END HEADER ==========-->
    <!--========== SLIDER ==========-->
    <div class="promo-block category">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 sm-margin-b-60">
                    <div class="margin-b-30">
                        <h1 class="promo-block-title">docker-compose 配置kafka_Docker Compose 引用环境变量</h1>
                        <p class="promo-block-text">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="promo-block-img-wrap">
                        <img class="promo-block-img img-responsive" src="/assets/website/img/vlessgithub/mockup/avatar-01.png" align="Avatar">
                    </div>
                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!--========== SLIDER ==========-->
    <!--========== PAGE LAYOUT ==========-->
    <!-- About -->
    <div id="about">
        <div class="container content-lg">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="htmledit_views"> <div> <p>在项目中，往往需要在 docker-compose.yml 文件中使用环境变量来控制不同的条件和使用场景。本文集中介绍 docker compose 引用环境变量的方式。<br />说明：本文的演示环境为 ubuntu 16.04。</p> <h2><b>Compose CLI 与环境变量</b></h2> <p>Compose CLI(compose command-line 即 docker-compose 程序)能够识别名称为 COMPOSE_PROJECT_NAME 和 COMPOSE_FILE 等环境变量(具体支持的环境变量请参考<u>这里</u>)。比如我们可以通过这两个环境变量为 docker-compose 指定 project 的名称和配置文件：</p> <p>$ export COMPOSE_PROJECT_NAME=TestVar $ export COMPOSE_FILE=~/projects/composecounter/docker-compose.yml</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/86b5ca1bd1dc21757ae5e4b957e8e68f.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <p>然后启动应用，显示的 project 名称都是我们在环境变量中指定的：</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/6b3d0dc8d6891928694cd520c1185b04.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <p>如果设置了环境变量的同时又指定了命令行选项，那么会应用命令行选项的设置：</p> <p>$ docker-compose -p nickproject up -d</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/224dfc6cfbc42c9482cf7e48ab51a51f.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <h2><b>在 compose file 中引用环境变量</b></h2> <p>我们还可以在 compose file 中直接引用环境变量，比如下面的 demo：</p> <p>version: '3' services: web: <b>image: ${IMAGETAG}</b> ports: - "5000:5000" redis: image: "redis:alpine"</p> <p>我们通过环境变量 ${IMAGETAG} 指定了 web 的镜像，下面通过 export 的方式来为 compose 配置文件中的环境变量传值：</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/24baa70d0cf80df85828e3a2017d5ba2.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <p>注意，如果对应的环境变量没有被设置，那么 compose 就会把它替换为一个空字符串：</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/42cfc54df5b94be6343deec574ddba2f.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <p>碰到这种情况，我们可以在 compose 的配置文件中为该变量设置一个默认值：</p> <p>version: '3' services: web: <b>image: ${IMAGETAG:-defaultwebimage}</b> ports: - "5000:5000" redis: image: "redis:alpine"</p> <p>这样，如果没有设置 IMAGETAG 变量，就会应用 defaultwebimage：</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/83024c8aa8339dcd1723274b1a4a2bd4.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <p>除了这种方式，我们还可以通过后面将介绍的 .env 文件来为环境变量设置默认值。</p> <h2><b>把环境变量传递给容器</b></h2> <p>先来看一下在 compose file 中如何为容器设置环境变量：</p> <p>web: <b>environment: DEBUG: 1</b></p> <p>compose file 中的 environment 节点用来为容器设置环境变量，上面的写法等同于：</p> <p>$ docker run <b>-e DEBUG=1</b></p> <p>要把当前 shell 环境变量的值传递给容器的环境变量也很简单，去掉上面代码中的赋值部分就可以了：</p> <p>web: <b>environment: DEBUG:</b></p> <p>这种情况下，如果没有在当前的 shell 中导出环境变量 DEBUG，compose file 中会把它解释为 null：</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/aeb3061bf70bd14b1e3342cf9c1daa2d.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <p>在试试导出环境变量 DEBUG 的情况：</p> <p>$ export DEBUG=1</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/236def0f21b1fb831d5fa508ace75f1b.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <p>这才是我们设计的正确的使用场景！</p> <h2><b>使用文件为容器设置多个环境变量</b></h2> <p>如果觉得通过 environment 为容器设置环境变量不够过瘾，我们还可以像 docker -run 的 --env-file 参数一样通过文件为容器设置环境变量：</p> <p>web: env_file: <b>- web-variables.env</b></p> <p>注意，web-variables.env 文件的路径是相对于 docker-compose.yml 文件的相对路径。上面的代码效果与下面的代码相同：</p> <p>$ docker run <b>--env-file=web-variables.env</b></p> <p>web-variables.env 文件中可以定义一个或多个环境变量：</p> <p># define web container env APPNAME=helloworld AUTHOR=Nick Li VERSION=1.0</p> <p>检查下结果：</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/e8c95beca7b0042820d86d8c48562ee8.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <p>原来 compose 把 env_file 的设置翻译成了 environment！</p> <h2><b>.env 文件</b></h2> <p>当我们在 docker-compose.yml 文件中引用了大量的环境变量时，对每个环境变量都设置默认值将是繁琐的，并且也会影响 docker-compose.yml 简洁程度。此时我们可以通过 .env 文件来为 docker-compose.yml 文件引用的所有环境变量设置默认值！<br />修改 docker-compose.yml 文件的内容如下：</p> <p>version: '3' services: web: image: ${IMAGETAG} environment: APPNAME: AUTHOR: VERSION: ports: - "5000:5000" redis: image: "redis:alpine"</p> <p>然后在相同的目录下创建 .env 文件，编辑其内容如下：</p> <p># define env var default value. IMAGETAG=defaultwebimage APPNAME=default app name AUTHOR=default author name VERSION=default version is 1.0</p> <p>检查下结果，此时所有的环境变量都显示为 .env 文件中定义的默认值：</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/f8186f9d5c16bcbf7ca0323cf9219f3c.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <h2><b>配置不同场景下的环境变量</b></h2> <p>从前面的部分中我们可以看到，docker compose 提供了足够的灵活性来让我们设置 docker-compose.yml 文件中引用的环境变量，它们的优先级如下：</p> <ol> <li>Compose file</li> <li><b>Shell environment variables</b></li> <li>Environment file</li> <li>Dockerfile</li> <li>Variable is not defined</li> </ol> <p><b>首先</b>，在 docker-compose.yml 文件中直接设置的值优先级是最高的。<b>然后</b>是在当前 shell 中 export 的环境变量值。<b>接下来</b>是在环境变量文件中定义的值。<b>再接下来</b>是在 Dockerfile 中定义的值。<b>最后</b>还没有找到相关的环境变量就认为该环境变量没有被定义。</p> <p>根据上面的优先级定义，我们可以把不同场景下的环境变量定义在不同的 shell 脚本中并导出，然后在执行 docker-compose 命令前先执行 source 命令把 shell 脚本中定义的环境变量导出到当前的 shell 中。通过这样的方式可以减少维护环境变量的地方，下面的例子中我们分别在 docker-compose.yml 文件所在的目录创建 test.sh 和 prod.sh，test.sh 的内容如下：</p> <p>#!/bin/bash # define env var default value. export IMAGETAG=web:v1 export APPNAME=HelloWorld export AUTHOR=Nick Li export VERSION=1.0</p> <p>prod.sh 的内容如下：</p> <p>#!/bin/bash # define env var default value. export IMAGETAG=webpord:v1 export APPNAME=HelloWorldProd export AUTHOR=Nick Li export VERSION=1.0LTS</p> <p>在测试环境下，执行下面的命令：</p> <p>$ source test.sh $ docker-compose config</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/dd94217e177537c1f46ba5b777e8abcf.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <p>此时 docker-compose.yml 中的环境变量应用的都是测试环境相关的设置。</p> <p>而在生产环境下，执行下面的命令：</p> <p>$ source prod.sh $ docker-compose config</p> <div style="text-align:center;">   <img decoding="async" src="http://img.555519.xyz/uploads/20230217/a61827c403cf5c4907a5d9cfdc954bfc.jpg" alt="docker-compose 配置kafka_Docker Compose 引用环境变量"> </div> <p>此时 docker-compose.yml 中的环境变量应用的都是生产环境相关的设置。</p> <h2><b>总结</b></h2> <p>docker compose 对环境变量的使用提供了非常丰富支持和灵活的使用方式。希望通过本文的总结可以帮助大家理清相关的用法，并能够以简洁的方式为不同的使用场景提供支持。</p> <p>欢迎工作一到五年的Java工程师朋友们加入Java程序员开发： 854393687</p> <p>群内提供免费的Java架构学习资料（里面有高可用、高并发、高性能及分布式、Jvm性能调优、Spring源码，MyBatis，Netty,Redis,Kafka,Mysql,Zookeeper,Tomcat,Docker,Dubbo,Nginx等多个知识点的架构资料）合理利用自己每一分每一秒的时间来学习提升自己，不要再用"没有时间“来掩饰自己思想上的懒惰！趁年轻，使劲拼，给未来的自己一个交代！</p> </div></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-89344.htm">领养宠物的好处与坏处英语作文初中（领养宠物的好处与坏处英语作文初中版）</a></p>
                                        <p>下一个：<a href="/news/article-90091.htm">宠物粮食品牌上市公司有几家公司啊（宠物粮行业）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/free-nodes/2025-3-13-node-share.htm" title="「3月13日」最高速度18.2M/S，2025年Vless每天更新免费机场节点地址链接">「3月13日」最高速度18.2M/S，2025年Vless每天更新免费机场节点地址链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-21-vless-github.htm" title="「3月21日」最高速度18.4M/S，2025年Vless每天更新免费机场节点地址链接">「3月21日」最高速度18.4M/S，2025年Vless每天更新免费机场节点地址链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-12-vless-github.htm" title="「3月12日」最高速度22.2M/S，2025年Vless每天更新免费机场节点地址链接">「3月12日」最高速度22.2M/S，2025年Vless每天更新免费机场节点地址链接</a></li>
                        <li class="py-2"><a href="/news/article-82869.htm" title="动物疫苗证是什么样的图片大全（动物疫苗注射证明怎么开）">动物疫苗证是什么样的图片大全（动物疫苗注射证明怎么开）</a></li>
                        <li class="py-2"><a href="/news/article-74615.htm" title="宠物领养协议具有法律效应吗知乎怎么写 宠物领养协议具有法律效应吗知乎怎么写">宠物领养协议具有法律效应吗知乎怎么写 宠物领养协议具有法律效应吗知乎怎么写</a></li>
                        <li class="py-2"><a href="/news/article-78696.htm" title="宠物衣服品牌排行榜图片（宠物服装品牌有哪些）">宠物衣服品牌排行榜图片（宠物服装品牌有哪些）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-22-today-vless-node.htm" title="「3月22日」最高速度21.2M/S，2025年Vless每天更新免费机场节点地址链接">「3月22日」最高速度21.2M/S，2025年Vless每天更新免费机场节点地址链接</a></li>
                        <li class="py-2"><a href="/news/article-83589.htm" title="宠物粮食店一年利润怎么样啊知乎推广 宠物粮食店一年利润怎么样啊知乎推广">宠物粮食店一年利润怎么样啊知乎推广 宠物粮食店一年利润怎么样啊知乎推广</a></li>
                        <li class="py-2"><a href="/news/article-75291.htm" title="深圳市宠物领养 深圳市宠物领养之家官网">深圳市宠物领养 深圳市宠物领养之家官网</a></li>
                        <li class="py-2"><a href="/news/article-69981.htm" title="关于springboot转发重定向以及受保护目录的一些规律">关于springboot转发重定向以及受保护目录的一些规律</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">27</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">87</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!-- End About -->
    <!--========== END PAGE LAYOUT ==========-->
        <!--========== FOOTER ==========-->
    <footer class="footer">
        <div class="content container">
            <div class="row">
                <div class="col-xs-12 text-center">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p class="margin-b-0">Vless Github机场订阅官网 版权所有 Powered by WordPress</p>
                </div>
            </div>
            <!--// end row -->
        </div>
    </footer>
    <!--========== END FOOTER ==========-->
    <!-- Back To Top -->
    <a href="javascript:void(0);" class="js-back-to-top back-to-top">Top</a>
    <!-- JAVASCRIPTS(Load javascripts at bottom, this will reduce page load time) -->
    <!-- CORE PLUGINS -->
    <script src="/assets/website/js/frontend/vlessgithub/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery-migrate.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL PLUGINS -->
    <script src="/assets/website/js/frontend/vlessgithub/jquery.easing.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.back-to-top.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.smooth-scroll.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.wow.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.parallax.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.appear.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/swiper/js/swiper.jquery.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL SCRIPTS -->
    <script src="/assets/website/js/frontend/vlessgithub/layout.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/progress-bar.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/swiper.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/wow.min.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>
<!-- END BODY -->

</html>