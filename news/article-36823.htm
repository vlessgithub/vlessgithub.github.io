<!DOCTYPE html>
<html lang="zh-CN" class="no-js">
<!-- BEGIN HEAD -->

<head>
        <link rel="canonical" href="https://vlessgithub.github.io/news/article-36823.htm" />
    <meta charset="utf-8" />
    <title>Java实现带缓冲的输入输出流_java</title>
        <meta name="description" content="缓冲是 I/O 的一种性能优化。缓冲流为 I/O 流增加了内存缓冲区。 BufferedInputStream类 与 BufferedOutputStream类 BufferedInputStream" />
        <link rel="icon" href="/assets/website/img/vlessgithub/favicon.ico" type="image/x-icon"/>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />
    <!-- GLOBAL MANDATORY STYLES -->
    <link href="http://fonts.googleapis.com/css?family=Hind:300,400,500,600,700" rel="stylesheet" type="text/css">
    <link href="/assets/website/js/frontend/vlessgithub/simple-line-icons/css/simple-line-icons.css" rel="stylesheet" type="text/css" />
    <link href="/assets/website/js/frontend/vlessgithub/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- PAGE LEVEL PLUGIN STYLES -->
    <link href="/assets/website/css/vlessgithub/animate.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/vlessgithub/swiper/css/swiper.min.css" rel="stylesheet" type="text/css" />
    <!-- THEME STYLES -->
    <link href="/assets/website/css/vlessgithub/layout.min.css" rel="stylesheet" type="text/css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-X2HXTZV7HY"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-X2HXTZV7HY');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>
<!-- END HEAD -->
<!-- BODY -->

<body id="body" data-spy="scroll" data-target=".header" data-page="detail">
        <!--========== HEADER ==========-->
    <header class="header navbar-fixed-top">
        <!-- Navbar -->
        <nav class="navbar" role="navigation">
            <div class="container">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="menu-container js_nav-item">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".nav-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="toggle-icon"></span>
                    </button>
                    <!-- Logo -->
                    <div class="logo">
                                                <a class="logo-wrap" href="/">
                            <span>Vless Github</span>
                        </a>
                                            </div>
                    <!-- End Logo -->
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse nav-collapse">
                    <div class="menu-container">
                        <ul class="nav navbar-nav navbar-nav-right">
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/news/">新闻资讯</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="#">关于</a></li>
                            <li class="nav-item"><a class="nav-item-child nav-item-hover" href="#">联系</a></li>
                        </ul>
                    </div>
                </div>
                <!-- End Navbar Collapse -->
            </div>
        </nav>
        <!-- Navbar -->
    </header>
    <!--========== END HEADER ==========-->
    <!--========== SLIDER ==========-->
    <div class="promo-block category">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 sm-margin-b-60">
                    <div class="margin-b-30">
                        <h1 class="promo-block-title">Java实现带缓冲的输入输出流_java</h1>
                        <p class="promo-block-text">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="promo-block-img-wrap">
                        <img class="promo-block-img img-responsive" src="/assets/website/img/vlessgithub/mockup/avatar-01.png" align="Avatar">
                    </div>
                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!--========== SLIDER ==========-->
    <!--========== PAGE LAYOUT ==========-->
    <!-- About -->
    <div id="about">
        <div class="container content-lg">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<p>缓冲是 I/O 的一种性能优化。缓冲流为 I/O 流增加了内存缓冲区。</p> <h2>BufferedInputStream类 与 BufferedOutputStream类</h2> <p>BufferedInputStream类 可以对所有InputStream的子类进行缓冲区的包装，以达到性能的优化。</p> <p>BufferedOutputStream类 中的 flush()方法 被用来把缓冲区的字节写入到文件中，并清空缓存。</p> <h3>BufferedInputStream类的构造方法：</h3> <table> <tbody> <tr> <th>构造方法</th> <th>介绍</th> </tr> <tr> <td>BufferedInputStream(FileInputStream fileInputStream);</td> <td>创建一个带有32个字节的缓冲输入流。</td> </tr> <tr> <td>BufferedInputStream(FileInputStream fileInputStream , int size);</td> <td>按指定的大小来创建缓冲输入流。</td> </tr> </tbody> </table> <h3>BufferedOutputStream类的构造方法：</h3> <table> <tbody> <tr> <th>构造方法</th> <th>介绍</th> </tr> <tr> <td>BufferedOutputStream(FileOutputStream fileOutputStream);</td> <td>创建一个带有32个字节的缓冲输出流。</td> </tr> <tr> <td>BufferedOutputStream(FileOutputStream fileOutputStream , int size);</td> <td>按指定的大小来创建缓冲输出流。</td> </tr> </tbody> </table> <h3>BufferedInputStream类 与 BufferedOutputStream类 实例：</h3> <div class="ay1code"> <pre class="brush:java;">import java.io.*;     public class Demo4 {      public static void main(String[] args) {          /**           * 缓冲字节输入流（BufferedInputStream）           * 特点：提高效率           */          File file = new File("C:\\JAVA_API_1.7中文.chm");          BufferedInputStream bufferedInputStream = null;//创建缓冲字节流          FileInputStream fileInputStream = null;          long stare = System.currentTimeMillis();//获得当前流开始时的毫秒值          try {              fileInputStream=new FileInputStream(file);              bufferedInputStream = new BufferedInputStream(fileInputStream);//将文件字节流包装成缓冲字节流              byte by[] = new byte[1024];//缓冲区字节数组（这个缓冲区与Buffered不同）              while ((bufferedInputStream.read(by))!=-1){//使用缓冲字节流读取数据                 }              long end = System.currentTimeMillis();//获得当前流结束时的毫秒值              System.out.println("运行经历的毫秒数："+(end - stare));             } catch (FileNotFoundException e) {              e.printStackTrace();          } catch (IOException e) {              e.printStackTrace();          } finally {              if (fileInputStream!=null){                  try {                      fileInputStream.close();                  } catch (IOException e) {                      e.printStackTrace();                  }              }              if (bufferedInputStream!=null){                  try {                      bufferedInputStream.close();                  } catch (IOException e) {                      e.printStackTrace();                  }              }          }                              /**           * 缓冲字节输出流（BufferedOutputStream）           * 特点：提高效率           */          File file1 = new File("C:\\Word.txt");          BufferedOutputStream bufferedOutputStream = null;//创建缓冲字节输出流          FileOutputStream fileOutputStream = null;          try {              fileOutputStream=new FileOutputStream(file1);              bufferedOutputStream=new BufferedOutputStream(fileOutputStream);//将文件输出流包装到缓冲字节输出流                 String str = "深山踏红叶，耳畔闻鹭鸣。";              byte by[] = str.getBytes();              bufferedOutputStream.write(by);              //&lt;*&gt; 使用缓冲字节输出流时，要多进行刷新操作，避免等待，有数据时就将数据写入文件当中 &lt;*&gt;              bufferedOutputStream.flush();//刷新（强制将缓冲区数据写入文件中，即使缓冲区没有写满）             } catch (FileNotFoundException e) {              e.printStackTrace();          } catch (IOException e) {              e.printStackTrace();          } finally {              if (fileOutputStream!=null){                  try {                      fileOutputStream.close();                  } catch (IOException e) {                      e.printStackTrace();                  }              }              if (bufferedOutputStream!=null){                  try {                      bufferedOutputStream.close();                  } catch (IOException e) {                      e.printStackTrace();                  }              }          }      }  }</pre> </div> <h2>BufferedReader类 与 BufferedWriter类</h2> <p>BufferedReader类 与 BufferedWriter类 分别继承了 Reader类 与 Writer类，这两个类同样具有内部缓冲机制，并以行为单位输入/输出。</p> <h3>BufferedReader类常用方法：</h3> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220419/ef29b2728ecc7f0d3a972b06667d7322.jpg"></p> <h3>BufferedWriter类常用方法：</h3> <p style="text-align:center"><img decoding="async" alt="" src="http://img.555519.xyz/uploads3/20220419/288963d53b2dba39980fe2a9cdfb316e.jpg"></p> <h3>BufferedReader类 与 BufferedWriter类 实例：</h3> <div class="ay1code"> <pre class="brush:java;">import java.io.*;     public class Demo6 {      public static void main(String[] args) {          File file = new File("C:\\Word.txt");             /**           * 文件缓冲字符输出流（BufferedWriter）           */          FileWriter fileWriter = null;//创建文件字符输出流          BufferedWriter bufferedWriter = null;//创建文件缓冲字符输出流             try {              fileWriter = new FileWriter(file);              bufferedWriter = new BufferedWriter(fileWriter);//将文件字符输出流包装成文件缓冲字符输出流                 String str1 = "神里";              String str2 = "绫华";                 bufferedWriter.write(str1);//第一行数据              bufferedWriter.newLine();//创建一个新行              bufferedWriter.write(str2);//第二行数据             } catch (IOException e) {              e.printStackTrace();          }finally {//&lt;*&gt; 注意：流的关闭顺序，先创建的后关闭。 &lt;*&gt;              if (bufferedWriter!=null){                  try {                      bufferedWriter.close();                  } catch (IOException e) {                      e.printStackTrace();                  }              }              if (fileWriter!=null){                  try {                      fileWriter.close();                  } catch (IOException e) {                      e.printStackTrace();                  }              }          }                /**           * 文件缓冲字符输入流（BufferedReader）           */          FileReader fileReader = null;          BufferedReader bufferedReader = null;          try {              fileReader = new FileReader(file);              bufferedReader = new BufferedReader(fileReader);//将文件字符输入流包装成文件缓冲字符输入流              String tmp = null;//临时变量              int i = 1;//计数器              while ((tmp = bufferedReader.readLine())!=null){//循环读取文件中的内容                  System.out.println("第"+i+"行："+tmp);                  i++;              }          } catch (FileNotFoundException e) {              e.printStackTrace();          } catch (IOException e) {              e.printStackTrace();          } finally {              if (bufferedReader!=null){                  try {                      bufferedReader.close();                  } catch (IOException e) {                      e.printStackTrace();                  }              }              if (fileReader!=null){                  try {                      fileReader.close();                  } catch (IOException e) {                      e.printStackTrace();                  }              }          }      }  }</pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-36339.htm">动物疫苗接种注意事项有哪些内容（动物疫苗注射工作注意事项）</a></p>
                                        <p>下一个：<a href="/news/article-36824.htm">济南美联众合动物医院李松大夫怎么样（济南美联众合动物医院李松大夫怎么样啊）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-36339.htm" title="动物疫苗接种注意事项有哪些内容（动物疫苗注射工作注意事项）">动物疫苗接种注意事项有哪些内容（动物疫苗注射工作注意事项）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-5-free-high-speed-nodes.htm" title="「11月5日」最高速度20.6M/S，2024年Vless每天更新免费机场订阅节点链接">「11月5日」最高速度20.6M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-15-today-vless-node.htm" title="「12月15日」最高速度20.6M/S，2024年Vless每天更新免费机场订阅节点链接">「12月15日」最高速度20.6M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-2-free-node-subscribe-links.htm" title="「12月2日」最高速度18.2M/S，2024年Vless每天更新免费机场订阅节点链接">「12月2日」最高速度18.2M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-25480.htm" title="成都市宠物领养中心电话（成都市宠物领养中心电话号码）">成都市宠物领养中心电话（成都市宠物领养中心电话号码）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-25-free-node-subscribe-links.htm" title="「11月25日」最高速度21.3M/S，2024年Vless每天更新免费机场订阅节点链接">「11月25日」最高速度21.3M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-31576.htm" title="宠物店亏本原因（现在宠物店生意亏死）">宠物店亏本原因（现在宠物店生意亏死）</a></li>
                        <li class="py-2"><a href="/news/article-27805.htm" title="妙三多疫苗间隔多久打一针最好（妙三多疫苗间隔多久打一针最好呢）">妙三多疫苗间隔多久打一针最好（妙三多疫苗间隔多久打一针最好呢）</a></li>
                        <li class="py-2"><a href="/news/article-28732.htm" title="宠物疫苗低温保存（宠物疫苗低温保存方法）">宠物疫苗低温保存（宠物疫苗低温保存方法）</a></li>
                        <li class="py-2"><a href="/news/article-35639.htm" title="制作猫粮的机器多少钱（自制猫粮机器视频）">制作猫粮的机器多少钱（自制猫粮机器视频）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">33</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">25</span> <a href="/date/2024-10/" title="2024-10 归档">2024-10</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!-- End About -->
    <!--========== END PAGE LAYOUT ==========-->
        <!--========== FOOTER ==========-->
    <footer class="footer">
        <div class="content container">
            <div class="row">
                <div class="col-xs-12 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="margin-b-0">Vless Github机场订阅官网 版权所有 Powered by WordPress</p>
                </div>
            </div>
            <!--// end row -->
        </div>
    </footer>
    <!--========== END FOOTER ==========-->
    <!-- Back To Top -->
    <a href="javascript:void(0);" class="js-back-to-top back-to-top">Top</a>
    <!-- JAVASCRIPTS(Load javascripts at bottom, this will reduce page load time) -->
    <!-- CORE PLUGINS -->
    <script src="/assets/website/js/frontend/vlessgithub/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery-migrate.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL PLUGINS -->
    <script src="/assets/website/js/frontend/vlessgithub/jquery.easing.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.back-to-top.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.smooth-scroll.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.wow.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.parallax.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.appear.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/swiper/js/swiper.jquery.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL SCRIPTS -->
    <script src="/assets/website/js/frontend/vlessgithub/layout.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/progress-bar.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/swiper.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/wow.min.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>
<!-- END BODY -->

</html>