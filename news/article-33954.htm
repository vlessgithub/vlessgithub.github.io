<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN" class="no-js">
<!-- BEGIN HEAD -->

<head>
        <link rel="canonical" href="https://vlessgithub.github.io/news/article-33954.htm" />
    <meta charset="utf-8" />
    <title>Go_error处理及panic、recover使用的正确姿势</title>
        <meta name="description" content="异常 异常就是程序出现了不正常的情况，会导致程序非正常停止，而异常处理就是针对非正常停止的情况，给出异常时的处理方式。语法错误不算异常体系中  error：   error是一个接口，作用是返回程序异" />
        <link rel="icon" href="/assets/website/img/vlessgithub/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Vless Github机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vlessgithub.github.io/news/article-33954.htm" />
    <meta property="og:site_name" content="Vless Github机场订阅官网" />
    <meta property="og:title" content="Go_error处理及panic、recover使用的正确姿势" />
    <meta property="og:image" content="https://vlessgithub.github.io/uploads/20240903/6066de2ee18f5c3147742ce59fe36abc.webp" />
        <meta property="og:release_date" content="2025-01-01T06:38:40" />
    <meta property="og:updated_time" content="2025-01-01T06:38:40" />
        <meta property="og:description" content="异常 异常就是程序出现了不正常的情况，会导致程序非正常停止，而异常处理就是针对非正常停止的情况，给出异常时的处理方式。语法错误不算异常体系中  error：   error是一个接口，作用是返回程序异" />
        
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Go_error处理及panic、recover使用的正确姿势">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- GLOBAL MANDATORY STYLES -->
    <link href="http://fonts.googleapis.com/css?family=Hind:300,400,500,600,700" rel="stylesheet" type="text/css">
    <link href="/assets/website/js/frontend/vlessgithub/simple-line-icons/css/simple-line-icons.css" rel="stylesheet" type="text/css" />
    <link href="/assets/website/js/frontend/vlessgithub/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- PAGE LEVEL PLUGIN STYLES -->
    <link href="/assets/website/css/vlessgithub/animate.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/vlessgithub/swiper/css/swiper.min.css" rel="stylesheet" type="text/css" />
    <!-- THEME STYLES -->
    <link href="/assets/website/css/vlessgithub/layout.min.css" rel="stylesheet" type="text/css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-X2HXTZV7HY"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-X2HXTZV7HY');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>
<!-- END HEAD -->
<!-- BODY -->

<body id="body" data-spy="scroll" data-target=".header" data-page="detail">
        <!--========== HEADER ==========-->
    <header class="header navbar-fixed-top">
        <!-- Navbar -->
        <nav class="navbar" role="navigation">
            <div class="container">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="menu-container js_nav-item">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".nav-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="toggle-icon"></span>
                    </button>
                    <!-- Logo -->
                    <div class="logo">
                                                <a class="logo-wrap" href="/">
                            <span>Vless Github</span>
                        </a>
                                            </div>
                    <!-- End Logo -->
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse nav-collapse">
                    <div class="menu-container">
                        <ul class="nav navbar-nav navbar-nav-right">
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/news/">新闻资讯</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="#">关于</a></li>
                            <li class="nav-item"><a class="nav-item-child nav-item-hover" href="#">联系</a></li>
                        </ul>
                    </div>
                </div>
                <!-- End Navbar Collapse -->
            </div>
        </nav>
        <!-- Navbar -->
    </header>
    <!--========== END HEADER ==========-->
    <!--========== SLIDER ==========-->
    <div class="promo-block category">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 sm-margin-b-60">
                    <div class="margin-b-30">
                        <h1 class="promo-block-title">Go_error处理及panic、recover使用的正确姿势</h1>
                        <p class="promo-block-text">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="promo-block-img-wrap">
                        <img class="promo-block-img img-responsive" src="/assets/website/img/vlessgithub/mockup/avatar-01.png" align="Avatar">
                    </div>
                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!--========== SLIDER ==========-->
    <!--========== PAGE LAYOUT ==========-->
    <!-- About -->
    <div id="about">
        <div class="container content-lg">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-dracula"> <h2> <a id="_0" rel="nofollow"></a>异常</h2> <p>异常就是程序出现了不正常的情况，会导致程序非正常停止，而异常处理就是针对非正常停止的情况，给出异常时的处理方式。语法错误不算异常体系中</p> <h2> <a id="error_4" rel="nofollow"></a>error：</h2> <blockquote> <ul> <li>error是一个接口，作用是返回程序异常的信息，errors实现了error</li> <li>创建error使用errors.New()可以定义异常信息</li> <li>如果将error作为返回值的话，要放在返回值列表的最后</li> </ul> </blockquote> <p>演示：</p> <pre><code class="prism language-go"><span class="token keyword">func</span> <span class="token function">TestError</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> num2 <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>result <span class="token builtin">int</span><span class="token punctuation">,</span> err <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	err <span class="token operator">=</span> <span class="token boolean">nil</span> 	<span class="token keyword">if</span> num1 <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">||</span> num2 <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{<!-- --></span> 		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"除数不能为0"</span><span class="token punctuation">)</span> 		<span class="token keyword">return</span> 	<span class="token punctuation">}</span> 	result <span class="token operator">=</span> num1 <span class="token operator">/</span> num2 	<span class="token keyword">return</span> <span class="token punctuation">}</span>  <span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	num<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">TestError</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		err <span class="token operator">=</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"除数不能为0"</span><span class="token punctuation">)</span> 	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{<!-- --></span> 		fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> <span class="token punctuation">}</span> </code></pre> <p>标准库将error定义为接口类型，以便于实现自定义错误类型</p> <pre><code class="prism language-go"><span class="token keyword">type</span> <span class="token builtin">error</span> <span class="token keyword">interface</span> <span class="token punctuation">{<!-- --></span>   <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span>  <span class="token punctuation">}</span> </code></pre> <p>error是最后一个返回参数。标准库提供了相关创建函数， 含简单错误文本的error对象</p> <pre><code class="prism language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	z<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">==</span> errDivByZero <span class="token punctuation">{<!-- --></span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	<span class="token function">println</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token keyword">var</span> errDivByZero <span class="token operator">=</span> errors<span class="token punctuation">.</span><span class="token function">New</span><span class="token punctuation">(</span><span class="token string">"division by zero"</span><span class="token punctuation">)</span>  <span class="token keyword">func</span> <span class="token function">div</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">if</span> y <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> errDivByZero 	<span class="token punctuation">}</span> 	<span class="token keyword">return</span> x <span class="token operator">/</span> y<span class="token punctuation">,</span> <span class="token boolean">nil</span> <span class="token punctuation">}</span> </code></pre> <p>错误变量通常以err作为前缀，且字符串内容全部小写，没有结束标点，以便于嵌入到其他格式化字符串中输出。与errors.New类似的还有fmt.Errorf，它返回一个格式化内容的错误对象。某些时候，我们需要自定义错误类型，以便容纳更多上下文状态信息。如此，还可基于类型做出判断</p> <pre><code class="prism language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	z<span class="token punctuation">,</span> err <span class="token operator">:=</span> <span class="token function">div</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> 	<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">switch</span> e <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token keyword">type</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> <span class="token comment">// 根据类型匹配</span> 		<span class="token keyword">case</span> DivError<span class="token punctuation">:</span> 			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> e<span class="token punctuation">.</span>x<span class="token punctuation">,</span> e<span class="token punctuation">.</span>y<span class="token punctuation">)</span> 		<span class="token keyword">default</span><span class="token punctuation">:</span> 			fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 		log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 	<span class="token punctuation">}</span> 	<span class="token function">println</span><span class="token punctuation">(</span>z<span class="token punctuation">)</span> <span class="token punctuation">}</span>  <span class="token keyword">type</span> DivError <span class="token keyword">struct</span> <span class="token punctuation">{<!-- --></span> 	x<span class="token punctuation">,</span> y <span class="token builtin">int</span> <span class="token punctuation">}</span>  <span class="token comment">//自定义错误类型。</span> <span class="token keyword">func</span> <span class="token punctuation">(</span>DivError<span class="token punctuation">)</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token builtin">string</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">return</span> <span class="token string">"division by zero"</span> <span class="token punctuation">}</span>  <span class="token comment">//实现error接口方法。</span> <span class="token keyword">func</span> <span class="token function">div</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">,</span> <span class="token builtin">error</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">if</span> y <span class="token operator">==</span> <span class="token number">0</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">,</span> DivError<span class="token punctuation">{<!-- --></span>x<span class="token punctuation">,</span> y<span class="token punctuation">}</span> 	<span class="token punctuation">}</span> 	<span class="token comment">//返回自定义错误类型。</span> 	<span class="token keyword">return</span> x <span class="token operator">/</span> y<span class="token punctuation">,</span> <span class="token boolean">nil</span> <span class="token punctuation">}</span> </code></pre> <ul> <li>自定义错误类型通常以Error为后缀。在用switch按类型匹配时，注意case顺序。应将自定义类型放在前面，优先匹配具体错误类型</li> <li>在写代码中，我们不能忽略error返回值，应做严格检查，否则可能会导致错误的逻辑状态。调用多返回值函数时，除error外，其他返回值同样需要关注。以os.File.Read方法为例，它会同时返回剩余内容和EOF。</li> </ul> <h2> <a id="panicrecover_109" rel="nofollow"></a>panic与recover：</h2> <blockquote> <p>panic是内置函数，可以终止程序，会立即中断当前函数流程，触发执行延迟调用<br /> recover可以拦截panic异常信息，但是recover不可以直接调用，只有在defer调用的函数中有效</p> </blockquote> <p>如果是放在循环中了，连续调用panic，仅最后一个会被recover捕耕</p> <pre><code class="prism language-go"><span class="token keyword">func</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 	<span class="token keyword">defer</span> <span class="token keyword">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{<!-- --></span> 		<span class="token keyword">if</span> err <span class="token operator">:=</span> <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{<!-- --></span> <span class="token comment">// 捕捉错误</span> 			log<span class="token punctuation">.</span><span class="token function">Fatalln</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> 		<span class="token punctuation">}</span> 	<span class="token punctuation">}</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  	<span class="token function">panic</span><span class="token punctuation">(</span><span class="token string">"我挂了"</span><span class="token punctuation">)</span>          <span class="token comment">// 引发错误</span> 	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">"会走这一步吗"</span><span class="token punctuation">)</span> <span class="token comment">// 不会执行，编译器也会提示这是一个永远不会执行的代码</span> <span class="token punctuation">}</span> </code></pre> <p>除非是不可恢复性，导致系统无法正常工作的错误，否则不建议使用Panic</p> <p>例如：文件系统没有操作权限，服务端口被占用，数据库未启动等情况</p> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-33478.htm">宠物粮食生产厂家（国内宠物粮食十大厂家）</a></p>
                                        <p>下一个：<a href="/news/article-33955.htm">动物疫苗在哪里买的正规（动物注射疫苗注射哪里）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-24566.htm" title="c++语法拾遗，一些细节与特性">c++语法拾遗，一些细节与特性</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-5-latest-vless-node.htm" title="「12月5日」最高速度21.1M/S，2024年Vless每天更新免费机场订阅节点链接">「12月5日」最高速度21.1M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-1-2-vless-github.htm" title="「1月2日」最高速度20.1M/S，2025年Vless每天更新免费机场节点地址链接">「1月2日」最高速度20.1M/S，2025年Vless每天更新免费机场节点地址链接</a></li>
                        <li class="py-2"><a href="/news/article-33001.htm" title="浅谈Vue下的components模板">浅谈Vue下的components模板</a></li>
                        <li class="py-2"><a href="/news/article-21789.htm" title="动物疫苗价格表最新图片大全集下载（动物疫苗价格表最新图片大全集下载）">动物疫苗价格表最新图片大全集下载（动物疫苗价格表最新图片大全集下载）</a></li>
                        <li class="py-2"><a href="/news/article-19499.htm" title="@NotEmpty、@NotBlank等注解的正确使用 @Validated和@Valid的区别 解决@NotBlank等注解不生效的问题 使用BindingResult进行接口请求参数的统一校验">@NotEmpty、@NotBlank等注解的正确使用 @Validated和@Valid的区别 解决@NotBlank等注解不生效的问题 使用BindingResult进行接口请求参数的统一校验</a></li>
                        <li class="py-2"><a href="/news/article-42747.htm" title="动物疫苗需要冷藏吗多少度（动物疫苗使用时的注意事项有哪些）">动物疫苗需要冷藏吗多少度（动物疫苗使用时的注意事项有哪些）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-14-vless-windows.htm" title="「11月14日」最高速度22M/S，2024年Vless每天更新免费机场订阅节点链接">「11月14日」最高速度22M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-6-vless-node-github.htm" title="「12月6日」最高速度21.9M/S，2024年Vless每天更新免费机场订阅节点链接">「12月6日」最高速度21.9M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-25945.htm" title="附近免费领养狗猫咪的地方在哪里（附近有没有免费的狗狗领）">附近免费领养狗猫咪的地方在哪里（附近有没有免费的狗狗领）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">6</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">29</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!-- End About -->
    <!--========== END PAGE LAYOUT ==========-->
        <!--========== FOOTER ==========-->
    <footer class="footer">
        <div class="content container">
            <div class="row">
                <div class="col-xs-12 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="margin-b-0">Vless Github机场订阅官网 版权所有 Powered by WordPress</p>
                </div>
            </div>
            <!--// end row -->
        </div>
    </footer>
    <!--========== END FOOTER ==========-->
    <!-- Back To Top -->
    <a href="javascript:void(0);" class="js-back-to-top back-to-top">Top</a>
    <!-- JAVASCRIPTS(Load javascripts at bottom, this will reduce page load time) -->
    <!-- CORE PLUGINS -->
    <script src="/assets/website/js/frontend/vlessgithub/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery-migrate.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL PLUGINS -->
    <script src="/assets/website/js/frontend/vlessgithub/jquery.easing.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.back-to-top.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.smooth-scroll.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.wow.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.parallax.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.appear.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/swiper/js/swiper.jquery.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL SCRIPTS -->
    <script src="/assets/website/js/frontend/vlessgithub/layout.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/progress-bar.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/swiper.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/wow.min.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>
<!-- END BODY -->

</html>