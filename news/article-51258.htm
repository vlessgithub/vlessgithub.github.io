<!DOCTYPE html>
<html xml:lang="zh-CN" lang="zh-CN" class="no-js">
<!-- BEGIN HEAD -->

<head>
        <link rel="canonical" href="https://vlessgithub.github.io/news/article-51258.htm" />
    <meta charset="utf-8" />
    <title>Python编程语言基础</title>
        <meta name="description" content="本博客为本人学习Python编程语言基础时所做的笔记。 学习渠道： ①廖雪峰的Python基础教程 ②中国大学MOOC北京理工大学Python程序设计 ③《Python数据结构与算法》（[美]Mich" />
        <link rel="icon" href="/assets/website/img/vlessgithub/favicon.ico" type="image/x-icon"/>

    <meta name="author" content="Vless Github机场订阅官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vlessgithub.github.io/news/article-51258.htm" />
    <meta property="og:site_name" content="Vless Github机场订阅官网" />
    <meta property="og:title" content="Python编程语言基础" />
    <meta property="og:image" content="https://vlessgithub.github.io/uploads/20240903/25334a7385405cae6b531508b92ea225.webp" />
        <meta property="og:release_date" content="2025-02-05T08:17:53" />
    <meta property="og:updated_time" content="2025-02-05T08:17:53" />
        <meta property="og:description" content="本博客为本人学习Python编程语言基础时所做的笔记。 学习渠道： ①廖雪峰的Python基础教程 ②中国大学MOOC北京理工大学Python程序设计 ③《Python数据结构与算法》（[美]Mich" />
        
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta content="width=device-width, initial-scale=1" name="viewport" />

    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Python编程语言基础">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- GLOBAL MANDATORY STYLES -->
    <link href="http://fonts.googleapis.com/css?family=Hind:300,400,500,600,700" rel="stylesheet" type="text/css">
    <link href="/assets/website/js/frontend/vlessgithub/simple-line-icons/css/simple-line-icons.css" rel="stylesheet" type="text/css" />
    <link href="/assets/website/js/frontend/vlessgithub/bootstrap/css/bootstrap.min.css" rel="stylesheet" type="text/css" />
    <!-- PAGE LEVEL PLUGIN STYLES -->
    <link href="/assets/website/css/vlessgithub/animate.css" rel="stylesheet">
    <link href="/assets/website/js/frontend/vlessgithub/swiper/css/swiper.min.css" rel="stylesheet" type="text/css" />
    <!-- THEME STYLES -->
    <link href="/assets/website/css/vlessgithub/layout.min.css" rel="stylesheet" type="text/css" />
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-X2HXTZV7HY"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-X2HXTZV7HY');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>
<!-- END HEAD -->
<!-- BODY -->

<body id="body" data-spy="scroll" data-target=".header" data-page="detail">
        <!--========== HEADER ==========-->
    <header class="header navbar-fixed-top">
        <!-- Navbar -->
        <nav class="navbar" role="navigation">
            <div class="container">
                <!-- Brand and toggle get grouped for better mobile display -->
                <div class="menu-container js_nav-item">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".nav-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="toggle-icon"></span>
                    </button>
                    <!-- Logo -->
                    <div class="logo">
                        <a class="logo-wrap" href="/">
                                                <span>Vless Github</span>
                                                </a>
                    </div>
                    <!-- End Logo -->
                </div>
                <!-- Collect the nav links, forms, and other content for toggling -->
                <div class="collapse navbar-collapse nav-collapse">
                    <div class="menu-container">
                        <ul class="nav navbar-nav navbar-nav-right">
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/">首页</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/free-nodes/">免费节点</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/paid-subscribe/">推荐机场</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="/news/">新闻资讯</a></li>
                                                        <li class="nav-item"><a class="nav-item-child nav-item-hover" href="#">关于</a></li>
                            <li class="nav-item"><a class="nav-item-child nav-item-hover" href="#">联系</a></li>
                        </ul>
                    </div>
                </div>
                <!-- End Navbar Collapse -->
            </div>
        </nav>
        <!-- Navbar -->
    </header>
    <!--========== END HEADER ==========-->
    <!--========== SLIDER ==========-->
    <div class="promo-block category">
        <div class="container">
            <div class="row">
                <div class="col-sm-6 sm-margin-b-60">
                    <div class="margin-b-30">
                        <h1 class="promo-block-title">Python编程语言基础</h1>
                        <p class="promo-block-text">
                            <a href="/">首页</a> / <a href="/news/">新闻资讯</a> / 正文
                        </p>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="promo-block-img-wrap">
                        <img class="promo-block-img img-responsive" src="/assets/website/img/vlessgithub/mockup/avatar-01.png" align="Avatar">
                    </div>
                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!--========== SLIDER ==========-->
    <!--========== PAGE LAYOUT ==========-->
    <!-- About -->
    <div id="about">
        <div class="container content-lg">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="" data-url="">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>本博客为本人学习Python编程语言基础时所做的笔记。<br /> 学习渠道：<br /> ①廖雪峰的Python基础教程<br /> ②中国大学MOOC北京理工大学Python程序设计<br /> ③《Python数据结构与算法》（[美]Michael T. Goodrich 、Roberto Tamassia、 Michael H. Goldwasser）<br /> 谁能看？<br /> 1、对想入门Python的人。<br /> 2、有一定的其他语言编程基础（如C、C++、Java、R、VB等）<br /> PS：老鸽子一只，随缘更新~</p> <div class="toc"> <h3>目录</h3> <ul> <li><a href="#Python_11" rel="nofollow">第一章：Python简介</a></li> <li> <ul> <li><a href="#Python_12" rel="nofollow">一、Python语言开发工具的选择</a></li> <li><a href="#Python_26" rel="nofollow">二、Python的安装</a></li> </ul> </li> <li><a href="#Python_54" rel="nofollow">第二章：Python基本语法元素</a></li> <li> <ul> <li><a href="#_55" rel="nofollow">一、保留字</a></li> <li><a href="#_93" rel="nofollow">二、基本数据类型和变量</a></li> <li><a href="#_149" rel="nofollow">三、输入和输出</a></li> <li><a href="#_227" rel="nofollow">四、组合数据类型</a></li> <li><a href="#_346" rel="nofollow">五、三大基本语句</a></li> </ul> </li> <li><a href="#_438" rel="nofollow">第三章：函数</a></li> <li> <ul> <li><a href="#_439" rel="nofollow">一、函数</a></li> <li><a href="#_447" rel="nofollow">二、定义函数</a></li> </ul> </li> <li><a href="#Python_461" rel="nofollow">第四章：Python高级特性</a></li> <li><a href="#_464" rel="nofollow">第五章：函数式编程</a></li> <li><a href="#_467" rel="nofollow">第六章：面向对象程序设计</a></li> </ul> </div> </h1> <h2> <a id="Python_12" rel="nofollow"></a>一、Python语言开发工具的选择</h2> <p>1、<strong>IDLE</strong>：是一个纯 Python 下使用 Tkinter 编写的相当基本的 IDE，具备基本的IDE的功能，是非商业Python开发的不错的选择。<br /> 2、<strong>Notepad++</strong>：是 Windows操作系统下的一套文本编辑器，有完整的中文化接口及支持多国语言编写的功能(UTF8技术)。<br /> 3、<strong>PyCharm</strong>：是一种Python IDE，带有一整套可以帮助用户在使用Python语言开发时提高其效率的工具，比如调试、语法高亮、Project管理、代码跳转、智能提示、自动完成、单元测试、版本控制。此外，该IDE提供了一些高级功能，以用于支持Django框架下的专业Web开发。<br /> 4、<strong>PyDev &amp; Eclipse</strong>：Eclipse的本身只是一个框架平台，但是众多插件的支持使得Eclipse拥有其他功能相对固定的IDE软件很难具有的灵活性。许多软件开发商以Eclipse为框架开发自己的IDE。<br /> 5、<strong>Visual Studio</strong>：开源IDE工具。<br /> 6、<strong>Anaconda &amp; Spyder</strong>：Anaconda适用于科学计算和数据分析，开源免费。<br /> 7、<strong>Canopy</strong>：适用于科学计算和数据分析。<br /> 我目前在用的是IDLE和Pycharm。</p> <p>引用链接：<br /> https://www.cnblogs.com/ttliu/articles/8028184.html<br /> https://www.oschina.net/p/eclipse?hmsr=aladdin1e1</p> <h2> <a id="Python_26" rel="nofollow"></a>二、Python的安装</h2> <p>1、进入Python官网：https://www.python.org/<br /> 2、在Download下选择自己的操作系统，这里以Windows为例。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/e17d47fd1e3f5daffdc80df832ff6c80.jpg" alt="Python编程语言基础"><br /> 3、选择合适的Python版本，这里以3.9.0为例。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/e5ef6a9c90b0149af63336cc6031d3d4.jpg" alt="Python编程语言基础"><br /> 4、如果操作系统是32位的，选择“Download Windows x86 executable installer”，如果操作系统是64位的，选择“Download Windows x86-64 executable installer”。</p> <p>5、下载完成后，打开exe文件，<strong>注意一定要勾选“Add Python 3.9 to PATH"选项</strong>！然后就可以点击“Install Now”安装了。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/8172925036c450a29f6314e9c495015b.jpg" alt="Python编程语言基础"><br /> 6、安装之后可以打开IDLE了（本人安装的是3.8版本）<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/560194f6f6d723bc3e41d7ddb575ec85.jpg" alt="Python编程语言基础"><br /> 7、试着输出以下语句<code>print("Hello Python!")</code>，应该会有如下运行结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/7c918ee87c48294c7be960916ee900f2.jpg" alt="Python编程语言基础"><br /> 8、在File中选择“New File”<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/f0b0bf1942ef93842e5243972a21e97f.jpg" alt="Python编程语言基础"><br /> 在新窗口中输入</p> <pre><code class="prism language-python">a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> </code></pre> <p>然后按F5，保存文件后运行。<br /> 随意输入一个东西，看看程序是不是原样输出了它。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/a03a971052fd43c03b944d2b76748afd.jpg" alt="Python编程语言基础"><br /> 至此，Python 安装完毕，以后你都可以使用IDLE进行编程。</p> </h1> <h2> <a id="_55" rel="nofollow"></a>一、保留字</h2> <p>保留字是Python语言中一些已经被赋予特定意义的单词，这就要求开发者在开发程序时，不能用这些保留字作为标识符给变量、函数、类、模板以及其他对象命名。例如保留字中if表示“如果”，这就要求我们在给变量命名时不能使用“if”。<br /> 接下来简要介绍以下Python的保留字。<br /> and——用于表达式运算，逻辑与操作<br /> as——用于类型转换<br /> assert——断言，用于判断变量或条件表达式的值是否为真<br /> break——中断循环语句的执行<br /> class——用于定义类<br /> continue——继续执行下一次循环<br /> def——用于定义函数或方法<br /> del——删除变量或者序列的值<br /> elif——条件语句，与if else结合使用<br /> else——条件语句 条件语句，与if、elif结合使用。也可以用于异常和循环使用<br /> except——包括捕获异常后的操作代码，与try、finally结合使用<br /> exec——用于执行python语句<br /> for——循环语句<br /> finally——用于异常语句，出现异常后，始终要执行finally包含的代码块。与try,except结合使用<br /> from——用于导入模块，与import结合使用<br /> global——定义全局变量<br /> if——条件语句，与else、elif结合使用<br /> import——用于导入模块，与from 结合使用<br /> in——判断变量是否存在序列中<br /> is——判断变量是否为某个类的实例<br /> lambda——定义匿名函数<br /> not——用于表达式运算，逻辑非操作<br /> or——用于表达式运算，逻辑或操作<br /> pass——空的类、函数、方法的占位符<br /> print——打印语句<br /> raise——异常抛出操作<br /> return——用于从函数返回计算结果<br /> try——包含可能会出现异常的语句，与except、finally结合使用<br /> while——循环语句<br /> with——简化Python的语句<br /> yield——用于从函数依次返回值</p> <p>引用链接：<br /> https://blog.csdn.net/iamlearner/article/details/79678464</p> <h2> <a id="_93" rel="nofollow"></a>二、基本数据类型和变量</h2> <p>1、数字类型<br /> 包括整型和浮点型，整型即整数类型，它用int来表示。浮点型即小数类型，它用float来表示。<br /> 数字类型的运算符：<br /> “+”：用于两个数字类型相加。<br /> “-”：用于两个数字类型相减。<br /> “*”：用于两个数字类型相乘。<br /> “/”：用于两个数字类型相除，其结果必为浮点型。<br /> “//”：用于两个数字类型相整除（向下取整），其结果必为整型。<br /> “%”：用于两个数字类型取余，如8%3=2。<br /> 不同的数字类型运算，浮点型会覆盖整型。如100.12 × 200 = 20024.0。</p> <p>2、字符类型<br /> 包括字符型和字符串型，字符型用chr表示，字符串型用str表示。<br /> 字符编码：<br /> （1）在Python3.0及以上版本中，字符串是以Unicode编码的，支持多语言。<br /> （2）对于单个字符的编码，Python提供了ord函数获取编码，或chr函数将编码转换为字符：</p> <pre><code class="prism language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'A'</span><span class="token punctuation">)</span> <span class="token number">65</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'中'</span><span class="token punctuation">)</span> <span class="token number">20013</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">66</span><span class="token punctuation">)</span> <span class="token string">'B'</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">25991</span><span class="token punctuation">)</span> <span class="token string">'文'</span> </code></pre> <p>（3）字符串类型的操作<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/7188264fb09a9b3c664cdb6bdc730b36.jpg" alt="Python编程语言基础"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/76b805b4e76371afe112ecbd8598b6ef.jpg" alt="Python编程语言基础"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/dcbd89f46a4c7501b07c14f08d66df25.jpg" alt="Python编程语言基础"><br /> 3、布尔类型<br /> 真为True，假为False，为逻辑运算值。<br /> 布尔类型的运算：<br /> and：A and B，只要A、B其中有一个为False，A and B就为False。<br /> or： A or B，只要A、B其中有一个为True，A or B就为True。<br /> not： not A，将A的逻辑值取反。</p> <p>4、空值<br /> 用None表示，空值不是0，因为0是有意义的。</p> <p>5、变量<br /> 如3中的A、B，就是变量。变量的命名规则为：<br /> （1）必须以字母、下划线开头，后面可以跟任意数目的字母、数字和下画线下划线。此处的字母并不局限于 26 个英文字母，可以包含中文字符、日文字符等。<br /> （2）由于 Python 3 支持 UTF-8 字符集，因此 Python 3 的标识符可以使用 UTF-8 所能表示的多种语言的字符。Python 语言是区分大小写的，因此 abc 和 Abc 是两个不同的标识符。<br /> （3）命名时不能使用保留字。</p> <p>变量可以是任何类型，Python中的变量类型是动态的，即不需要声明其类型，但是如果在某些条件下由于类型没有声明而造成TypeError，这时就需要用函数来对其声明类型。</p> <pre><code class="prism language-python">a <span class="token operator">=</span> <span class="token number">3.14159265</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#把a强制转换为整型</span> </code></pre> <p>6、注释<br /> 在写代码时，有时为了解释一些东西（比如你写的一长串判断语句是为了判断什么，或者写了一个函数是什么功能，或者定义了一个变量是用来干嘛的），可以在其之后写注释。只要在注释语句前加入#号就可。</p> <h2> <a id="_149" rel="nofollow"></a>三、输入和输出</h2> <p>1、Python的输出<br /> Python用print()函数进行输出，如：</p> <pre><code class="prism language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span> <span class="token number">123456</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token number">3</span> <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"1+2"</span><span class="token punctuation">)</span> <span class="token number">1</span><span class="token operator">+</span><span class="token number">2</span> </code></pre> <p>但是问题来了，假设你存有一个数据库，上面有每个人的名字以及他的分数，现在你要输出“Hello，(他的名字)，your score is (他的分数)"，应该怎么做到呢？看以下例子：</p> <pre><code class="prism language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello, %s, your score is %d."</span><span class="token operator">%</span><span class="token punctuation">(</span><span class="token string">"Bob"</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Hello<span class="token punctuation">,</span> Bob<span class="token punctuation">,</span> your score <span class="token keyword">is</span> <span class="token number">99</span><span class="token punctuation">.</span> </code></pre> <p>这时你只需要修改%之后的内容就可以了。</p> <p>除此之外，还有一个方法，就是用format。</p> <pre><code class="prism language-python"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Hello, {}, your score is {}."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token string">"Bob"</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">)</span><span class="token punctuation">)</span> Hello<span class="token punctuation">,</span> Bob<span class="token punctuation">,</span> your score <span class="token keyword">is</span> <span class="token number">99</span><span class="token punctuation">.</span> </code></pre> <p>format有更强的格式控制方法。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/9ee02b2b71a8e6c5bfb462e79d1305e0.jpg" alt="Python编程语言基础"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/ab9a5b07144ccd53bd259eabd4e8cbf4.jpg" alt="Python编程语言基础"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/9d7b5e028f7f38d69dc6c00476ae2d70.jpg" alt="Python编程语言基础"><br /> 2、Python的输入<br /> Python的输入一般通过input()函数。<br /> 如：</p> <pre><code class="prism language-python">a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> b <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">3</span> <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> </code></pre> <p>当你试着去运行程序，发现报错了。原因是input函数从键盘上输入的语句会用做str型，所以这时要用int()函数进行强制类型转换。</p> <pre><code class="prism language-python">a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> b <span class="token operator">=</span> a <span class="token operator">+</span> <span class="token number">3</span> <span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span> </code></pre> <p>运行结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/49a6bd41771e92e8547b0f8efe57957e.jpg" alt="Python编程语言基础"><br /> 我们再试试运行以下代码：</p> <pre><code class="prism language-python">a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> b <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> </code></pre> <p>上面提到，input()读取的东西是字符串，两个字符串能相加吗？在Python里是可以的，相当于把两个字符串连接起来。<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/81cccdde9ebfc5c462ce5824a72cf430.jpg" alt="Python编程语言基础"><br /> 接下来再思考一个问题，我在一行上输入两个数字，以空格分隔，希望input()能直接读取并赋值给两个变量，应该怎么做呢？</p> <p>例如：我想把输入“12 13”并赋值给a和b。<br /> 这时应该用到分隔函数split()</p> <pre><code class="prism language-python">a<span class="token punctuation">,</span>b <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token punctuation">)</span> </code></pre> <p>运行结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/986b51c701f5c984d9905ce762c6b63c.jpg" alt="Python编程语言基础"><br /> 再者，如果是逗号呢？例如：</p> <pre><code class="prism language-python">a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a<span class="token operator">+</span>b<span class="token operator">+</span>c<span class="token operator">+</span>d<span class="token punctuation">)</span> </code></pre> <p>运行结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/04dde617986b94effad1b3ea53de947b.jpg" alt="Python编程语言基础"><br /> split()内可添加一个字符，用于表示它是以这个字符来分割输入语句。</p> <h2> <a id="_227" rel="nofollow"></a>四、组合数据类型</h2> <p>1、list类型<br /> 也叫列表类型。如下图，定义一个列表类型：</p> <pre><code class="prism language-python">L <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token keyword">print</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span> </code></pre> <p>运行结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/753af154566b512186721f27d8bd5d2a.jpg" alt="Python编程语言基础"><br /> 列表类型类似于C语言里的数组。其中1，2，3，4，5分别是列表里的第0，1，2，3，4个成员，可以通过L[i]来访问列表的第i个成员（注意是从0开始的）</p> <pre><code class="prism language-python">L <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token keyword">print</span><span class="token punctuation">(</span>L<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre> <p>运行结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/9e61f79600e16d9fc4a37a9961e1e48d.jpg" alt="Python编程语言基础"><br /> 将字符串类型转化为列表型，可以用list()函数，它会把每个字符作为列表中的元素。例如</p> <pre><code class="prism language-python">L <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#别忘了input()得到的是str类型</span> <span class="token keyword">print</span><span class="token punctuation">(</span>L<span class="token punctuation">)</span> </code></pre> <p>运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230207/01782ef71d545c08ee20e29615a8e730.jpg" alt="Python编程语言基础"></p> <p>下面是list类型的一些常用操作：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/4f784389a31aee844dbd732e37ba50db.jpg" alt="Python编程语言基础"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/ea04ef1b59fe4cd64eaf9d6ced27104f.jpg" alt="Python编程语言基础"></p> <p>2、tuple类型<br /> 也叫元组类型，与list类型不同之处在于，它一旦被创建就不能被更改，只能访问。</p> <pre><code class="prism language-python">T <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span> </code></pre> <p>运行结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/de6d6d8d2a697a03a82ab9549bfd64dd.jpg" alt="Python编程语言基础"><br /> 此时以下命令会报错：</p> <pre><code class="prism language-python">T<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">3</span> <span class="token comment">#修改tuple的元素</span> </code></pre> <p>运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230207/2933b54fce2b9335a020d5063dceb43e.jpg" alt="Python编程语言基础"><br /> 同样可以使用tuple()函数把字符串转化为元组类型</p> <pre><code class="prism language-python">T <span class="token operator">=</span> <span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>T<span class="token punctuation">)</span> </code></pre> <p>运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230207/f1e5e3b57723562c9446840f0b70edd8.jpg" alt="Python编程语言基础"><br /> 元组类型的其他操作：（这些操作同样能应用于列表类型）</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230207/8bfeabca7dfe57f5ffca0a2c31f95f3c.jpg" alt="Python编程语言基础"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/c1dcd65fa6850eb0e8674036c1f83e12.jpg" alt="Python编程语言基础"></p> <p>3、set类型<br /> 也叫集合类型，与列表和元组类型的不同之处在于，集合类型中每个元素必须互异。（即数学里提到的集合的互异性）</p> <pre><code class="prism language-python">S <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">}</span> <span class="token keyword">print</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span> </code></pre> <p>运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230207/f8f4f2cda53d04452ff2b275c1aba27f.jpg" alt="Python编程语言基础"><br /> 同样可以把字符串类型转化为集合类型。</p> <pre><code class="prism language-python">S <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>S<span class="token punctuation">)</span> </code></pre> <p>运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230207/95789d15afb960428774739c71d23e4c.jpg" alt="Python编程语言基础"><br /> 集合类型的操作：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230207/55fc448a17e8aec86439908b159bf59d.jpg" alt="Python编程语言基础"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/16b8d78c2c9c84e71089455443348492.jpg" alt="Python编程语言基础"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/f9cb5543eedfe74449b9aee6aae5649e.jpg" alt="Python编程语言基础"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/8e48d4d1a032cdd47ca95024ae5f6fa9.jpg" alt="Python编程语言基础"></p> <p>4、dict类型<br /> 又叫字典类型或映射类型。类型中的每一个元素都由一对键值对构成，每一对键值对由一个键和一个值构成。例如：</p> <pre><code class="prism language-python">D <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token string">'Alice'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token string">'Bob'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token string">'Cindy'</span> <span class="token punctuation">}</span> <span class="token keyword">print</span><span class="token punctuation">(</span>D<span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> </code></pre> <p>运行结果：<br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/f5933c4bccf7020099f780d4e634d38b.jpg" alt="Python编程语言基础"><br /> D是一个dict类型，其中’a’、‘b’、'c’是字典的键，‘Alice’、‘bob’、'Cindy’是每个键对应的值，键和值可以是数字类型、字符类型，但是使用字符类型是要添加单引号或双引号。<br /> 再举一个例子，比如Score是一个字典类型，它存储了一个学生的语文、数学和英语成绩。</p> <pre><code class="prism language-python">Score <span class="token operator">=</span> <span class="token punctuation">{<!-- --></span> <span class="token string">"Chinese"</span><span class="token punctuation">:</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token string">"Math"</span><span class="token punctuation">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token string">"English"</span><span class="token punctuation">:</span> <span class="token number">98</span> <span class="token punctuation">}</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Please input the subject you want to search: "</span><span class="token punctuation">)</span> S <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Your {} score is {}."</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span>S<span class="token punctuation">,</span> Score<span class="token punctuation">[</span>S<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p>运行结果：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230207/935e0bdadb9a2d369b5aef74ab513ac9.jpg" alt="Python编程语言基础"><br /> 当然此代码的健壮性很差，如果输入了不是键中的字符串，就会报错。</p> <p>字典类型的常用操作：</p> <p><img decoding="async" src="http://img.555519.xyz/uploads/20230207/2c285bdd15daa7e5dcdf63c9b7a82ba9.jpg" alt="Python编程语言基础"><br /><img decoding="async" src="http://img.555519.xyz/uploads/20230207/a898eda3280615243148e97d963a9557.jpg" alt="Python编程语言基础"></p> <h2> <a id="_346" rel="nofollow"></a>五、三大基本语句</h2> <p>1、顺序语句<br /> 如下代码即顺序语句，它是直接一连串运行下去的。</p> <pre><code class="prism language-python">a <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> b <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">-</span> b<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">*</span> b<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>a <span class="token operator">/</span> b<span class="token punctuation">)</span> </code></pre> <p>2、条件语句<br /> 如下面：</p> <pre><code class="prism language-python"><span class="token comment">#判断闰年</span> year <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> year <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">and</span> year <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span> 	<span class="token keyword">if</span> year <span class="token operator">%</span> <span class="token number">400</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span> 		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Yes"</span><span class="token punctuation">)</span> 	<span class="token keyword">else</span><span class="token punctuation">:</span> 		<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"No"</span><span class="token punctuation">)</span> <span class="token keyword">elif</span> year <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token operator">and</span> year <span class="token operator">%</span> <span class="token number">100</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span> 	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Yes"</span><span class="token punctuation">)</span> <span class="token keyword">else</span><span class="token punctuation">:</span> 	<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"No"</span><span class="token punctuation">)</span> 	 </code></pre> <p>python的条件控制语句有三个保留字：if、elif和else，其中if和elif后面必须跟上条件，else后面不能跟上任何条件。</p> <p>3、循环语句<br /> 如下面：</p> <pre><code class="prism language-python"><span class="token comment">#计算从1到100的和。</span> Sum <span class="token operator">=</span> <span class="token number">0</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">while</span> i <span class="token operator">&lt;=</span> <span class="token number">100</span><span class="token punctuation">:</span> 	Sum <span class="token operator">=</span> Sum <span class="token operator">+</span> i 	i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span> <span class="token keyword">print</span><span class="token punctuation">(</span>Sum<span class="token punctuation">)</span> </code></pre> <p>当while后面的条件满足时，就一直进入循环体。<br /> break和continue保留字：break是结束循环，continue是跳过本次循环。如下面：</p> <pre><code class="prism language-python"><span class="token comment">#列举1-100内的所有偶数</span> i <span class="token operator">=</span> <span class="token number">1</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span> 	<span class="token keyword">if</span> i <span class="token operator">&gt;</span> <span class="token number">100</span><span class="token punctuation">:</span> 		<span class="token keyword">break</span> 	i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span> 	<span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">2</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span> 		<span class="token keyword">continue</span> 	<span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> </code></pre> <p>①当i大于100时，退出循环，break之后的语句都不执行。<br /> ②当i为奇数时，跳过本次循环，continue之后的语句都不执行。<br /> ③输出i</p> <p>除此之外，还有for…in…迭代法</p> <pre><code class="prism language-python"><span class="token comment">#计算从1到100的和</span> Sum <span class="token operator">=</span> <span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 	Sum <span class="token operator">+=</span> i <span class="token keyword">print</span><span class="token punctuation">(</span>Sum<span class="token punctuation">)</span> </code></pre> <p>range(1, 101)是一个迭代器，每次调用就返回前一个数+1，这个在高级特性上会细说。目前你可以先把range(1, 101)看成一个list类型，它的元素为从1到100的正整数。每一次调用for…in…语句，就把相应的数值传给i，直到取完为止。下面这个实例有助于你的理解：</p> <pre><code class="prism language-python">DList <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> DList<span class="token punctuation">:</span> 	<span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> </code></pre> <p>输出结果如下：<br /> 1<br /> 2<br /> 3<br /> 4<br /> 5<br /> 6<br /> 7<br /> 8<br /> 9<br /> 10</p> <p>所以，for…in…语句的重复次数取决于DList的元素个数。</p> </h1> <h2> <a id="_439" rel="nofollow"></a>一、函数</h2> <p>Python中内置和很多函数，例如前面我们见到过的：<br /> int(x) ：将x转化为整型。<br /> str(x) ：将x转化为字符串型。<br /> 除此之外还有很多：<br /> abs(x) ：求x的绝对值。<br /> max(x) ：返回x中的最大值。<br /> sum(x) ：返回x中所有元素的和。</p> <h2> <a id="_447" rel="nofollow"></a>二、定义函数</h2> <p>定义函数需要用到Python中的保留字def，并且函数体相较于def语句要缩进一个Tab(四个空格)，例如：</p> <pre><code class="prism language-python"><span class="token keyword">def</span> <span class="token function">demo_function</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span> 	<span class="token keyword">return</span> x <span class="token operator">*</span> x </code></pre> <p>这个函数实现的功能是：传入一个整型变量，返回该变量的平方值，例如：</p> <pre><code class="prism language-python">x <span class="token operator">=</span> <span class="token number">2</span> <span class="token keyword">print</span><span class="token punctuation">(</span>demo_function<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span> </code></pre> <p>程序输出的是4（2的平方）</p> </h1> </h1> </h1> </p></div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-50734.htm">【襄阳宠物领养|襄阳宠物赠送】 襄阳宠物领养中心地址</a></p>
                                        <p>下一个：<a href="/news/article-51259.htm">SpringBoot线程池参数搜一堆资料还是不会配，我花一天测试换你此生明白。_在线工具</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-45731.htm" title="宠物粮食店名称大全四个字怎么取（宠物粮创意名字）">宠物粮食店名称大全四个字怎么取（宠物粮创意名字）</a></li>
                        <li class="py-2"><a href="/news/article-46222.htm" title="详解如何在Flutter中获取设备标识符_Android_">详解如何在Flutter中获取设备标识符_Android_</a></li>
                        <li class="py-2"><a href="/news/article-45732.htm" title="宠物疫苗猫咪可以打吗（宠物疫苗猫咪可以打吗）">宠物疫苗猫咪可以打吗（宠物疫苗猫咪可以打吗）</a></li>
                        <li class="py-2"><a href="/news/article-31575.htm" title="动物疫苗包括哪些（动物疫苗是什么）">动物疫苗包括哪些（动物疫苗是什么）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-9-vless-github.htm" title="「12月9日」最高速度22.7M/S，2024年Vless每天更新免费机场订阅节点链接">「12月9日」最高速度22.7M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/news/article-29195.htm" title="动物疫苗经营许可证怎么申请领取的（动物疫苗审批）">动物疫苗经营许可证怎么申请领取的（动物疫苗审批）</a></li>
                        <li class="py-2"><a href="/news/article-20874.htm" title="上海宠物领养日期查询官网（上海宠物狗领养网站）">上海宠物领养日期查询官网（上海宠物狗领养网站）</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-12-11-latest-vless-node.htm" title="「12月11日」最高速度21.6M/S，2024年Vless每天更新免费机场订阅节点链接">「12月11日」最高速度21.6M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-15-free-high-speed-nodes.htm" title="「11月15日」最高速度18.8M/S，2024年Vless每天更新免费机场订阅节点链接">「11月15日」最高速度18.8M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                        <li class="py-2"><a href="/free-nodes/2024-11-16-vless-node.htm" title="「11月16日」最高速度20.7M/S，2024年Vless每天更新免费机场订阅节点链接">「11月16日」最高速度20.7M/S，2024年Vless每天更新免费机场订阅节点链接</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">21</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">92</span> <a href="/date/2025-01/" title="2025-01 归档">2025-01</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">93</span> <a href="/date/2024-12/" title="2024-12 归档">2024-12</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">29</span> <a href="/date/2024-11/" title="2024-11 归档">2024-11</a></h4>
            </li>
                    </ul>
    </div>
</div>

                </div>
            </div>
            <!--// end row -->
        </div>
    </div>
    <!-- End About -->
    <!--========== END PAGE LAYOUT ==========-->
        <!--========== FOOTER ==========-->
    <footer class="footer">
        <div class="content container">
            <div class="row">
                <div class="col-xs-12 text-center">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p class="margin-b-0">Vless Github机场订阅官网 版权所有 Powered by WordPress</p>
                </div>
            </div>
            <!--// end row -->
        </div>
    </footer>
    <!--========== END FOOTER ==========-->
    <!-- Back To Top -->
    <a href="javascript:void(0);" class="js-back-to-top back-to-top">Top</a>
    <!-- JAVASCRIPTS(Load javascripts at bottom, this will reduce page load time) -->
    <!-- CORE PLUGINS -->
    <script src="/assets/website/js/frontend/vlessgithub/jquery-3.5.1.min.js"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery-migrate.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL PLUGINS -->
    <script src="/assets/website/js/frontend/vlessgithub/jquery.easing.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.back-to-top.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.smooth-scroll.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.wow.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.parallax.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/jquery.appear.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/swiper/js/swiper.jquery.min.js" type="text/javascript"></script>
    <!-- PAGE LEVEL SCRIPTS -->
    <script src="/assets/website/js/frontend/vlessgithub/layout.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/progress-bar.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/swiper.min.js" type="text/javascript"></script>
    <script src="/assets/website/js/frontend/vlessgithub/components/wow.min.js" type="text/javascript"></script>
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>
<!-- END BODY -->

</html>